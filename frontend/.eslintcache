[{"C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\index.js":"1","C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\App.js":"2","C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\RegisterPage.js":"4","C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\LoginPage.js":"5","C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\HomePage.js":"6"},{"size":635,"mtime":1612047985144,"results":"7","hashOfConfig":"8"},{"size":636,"mtime":1612047985143,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1612036202528,"results":"10","hashOfConfig":"8"},{"size":1009,"mtime":1612036202527,"results":"11","hashOfConfig":"8"},{"size":4387,"mtime":1612049485149,"results":"12","hashOfConfig":"8"},{"size":2652,"mtime":1612047730067,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1xa66bq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\index.js",["31","32","33"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Homepage from './Homepage';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport RegisterPage from './RegisterPage';\r\nimport LoginPage from './LoginPage'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["34","35"],"C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\App.js",["36","37","38"],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport LoginPage from './LoginPage'\r\nimport RegisterPage from \"./RegisterPage\";\r\nimport Homepage from './Homepage'\r\n\r\n\r\nfunction App() {\r\n  \r\n  \r\n  \r\n  \r\n  return (\r\n    <Router>\r\n      <Homepage/>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={LoginPage} />\r\n          <Route exact path='/register' component={RegisterPage}/>\r\n        </Switch>\r\n    </Router>\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\RegisterPage.js",[],["39","40"],"C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\LoginPage.js",["41","42"],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Axios from \"axios\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction LoginPage() {\r\n    const history = useHistory();\r\n    const [loginUsername, setLoginUsername] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    \r\n\r\n    function helper(res){\r\n      \r\n      if (res.data == \"Successfully Authenticated\") {\r\n        console.log(res)\r\n        history.push('/')\r\n      }\r\n      else {\r\n        console.log('login failed')\r\n      }\r\n\r\n    }\r\n    const login = () => {\r\n        Axios({\r\n          method: \"POST\",\r\n          data: {\r\n            username: loginUsername,\r\n            password: loginPassword,\r\n          },\r\n          withCredentials: true,\r\n          url: \"http://localhost:4000/login\",\r\n        }).then((res) => helper(res));\r\n    };\r\n    \r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e)=> setLoginUsername(e.target.value)} \r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e)=>setLoginPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={login}\r\n\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                \"Don't have an account? Sign Up\"\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default LoginPage","C:\\Users\\matth\\Coding Projects\\TAMUhack2021\\tamuhack-2021\\frontend\\src\\HomePage.js",[],{"ruleId":"43","severity":1,"message":"44","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":20},{"ruleId":"43","severity":1,"message":"48","line":7,"column":8,"nodeType":"45","messageId":"46","endLine":7,"endColumn":17},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"43","severity":1,"message":"53","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"54","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":13},{"ruleId":"43","severity":1,"message":"55","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":14},{"ruleId":"49","replacedBy":"56"},{"ruleId":"51","replacedBy":"57"},{"ruleId":"43","severity":1,"message":"58","line":17,"column":9,"nodeType":"45","messageId":"46","endLine":17,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":64,"column":20,"nodeType":"61","messageId":"62","endLine":64,"endColumn":22},"no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","'RegisterPage' is defined but never used.","'LoginPage' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'useState' is defined but never used.","'Axios' is defined but never used.","'Button' is defined but never used.",["63"],["64"],"'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]